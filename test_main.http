GET http://127.0.0.1:8000/encode/12345
Accept: application/json

assert response.status_code == 200
assert response = '00003039'
###Testing encode less than 8 returning status code 200

GET http://127.0.0.1:8000/decode/00003039
Accept: application/json

assert response.status_code == 200
assert response = 12345
###Testing decode with zero

GET http://127.0.0.1:8000/encode/12345678
Accept: application/json

assert response.status_code == 200
assert response = 00bc614e
###Testing encode in the optimal path


GET http://127.0.0.1:8000/encode/1234567878787
Accept: application/json

assert response.status_code == 400
assert response.json() == {'Error': 'The number cannot be greater than 10000000.'}
###Testing encode with numbers greater than 8 characters


GET http://127.0.0.1:8000/encode/5
Accept: application/json

assert response.status_code == 200
assert len(response) == 8
###1 character encoder


GET http://127.0.0.1:8000/decode/bc614e
Accept: application/json

assert response.status_code == 200
assert response == 12345678
###Testing decode in the optimal path


GET http://127.0.0.1:8000/decode/g
Accept: application/json

assert response.status_code == 500
assert response.json() == {"detail": "An error occurred while decoding"}
###Testing invalid string decode